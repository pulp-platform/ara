// Copyright 2022 ETH Zurich and University of Bologna.
//
// SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Matteo Perotti <mperotti@iis.ee.ethz.ch>

#include <stdint.h>
#include <string.h>

#include "../kernel/softmax.h"
#include "runtime.h"
#include "util.h"

#ifndef WARM_CACHES_ITER
#define WARM_CACHES_ITER 1
#endif

#ifndef SPIKE
#include "printf.h"
#else
#include <stdio.h>
#endif

extern uint64_t channels;
extern uint64_t innerSize;
extern float i[] __attribute__((aligned(4 * NR_LANES)));
extern float buf[] __attribute__((aligned(4 * NR_LANES)));
extern float o_s[] __attribute__((aligned(4 * NR_LANES)));
extern float o_v[] __attribute__((aligned(4 * NR_LANES)));

void warm_caches(uint64_t heat) {
  for (uint64_t k = 0; k < heat; ++k)
    softmax_vec(i, o_v, channels, innerSize);
}

int main() {
  int64_t runtime;

#ifndef SPIKE
  // Warm-up caches
  warm_caches(WARM_CACHES_ITER);
#endif

  HW_CNT_READY;
  start_timer();
  softmax_vec(i, o_v, channels, innerSize);
  stop_timer();

  runtime = get_timer();

  printf("[sw-cycles]: %ld\n", runtime);

  return 0;
}
